/content/drive/MyDrive/ECE_2392AS_Project4_V2/Student-Version 2/DQN.py:157: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  states = torch.tensor(states, device=self.device, dtype=torch.float32)
/content/drive/MyDrive/ECE_2392AS_Project4_V2/Student-Version 2/DQN.py:158: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  actions = torch.tensor(actions, device=self.device, dtype=torch.int64).unsqueeze(1)
/content/drive/MyDrive/ECE_2392AS_Project4_V2/Student-Version 2/DQN.py:159: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  rewards = torch.tensor(rewards, device=self.device, dtype=torch.float32).unsqueeze(1)
/content/drive/MyDrive/ECE_2392AS_Project4_V2/Student-Version 2/DQN.py:160: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  next_states = torch.tensor(next_states, device=self.device, dtype=torch.float32)
/content/drive/MyDrive/ECE_2392AS_Project4_V2/Student-Version 2/DQN.py:161: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  dones = torch.tensor(dones, device=self.device, dtype=torch.float32).unsqueeze(1)
Episode: 1: Time: 23.727848291397095 Total Reward: -47.55474452554804 Avg_Loss: 0.5464825909644081
Episode: 2: Time: 29.090681076049805 Total Reward: -41.42857142857163 Avg_Loss: 1.4614340252235156
Episode: 3: Time: 30.306782722473145 Total Reward: -41.127946127946714 Avg_Loss: 0.6027160825035652
Episode: 4: Time: 33.01542067527771 Total Reward: -42.183098591549864 Avg_Loss: 0.6239428962541729
Episode: 5: Time: 32.9464373588562 Total Reward: -72.09923664122178 Avg_Loss: 0.61945490103935
Episode: 6: Time: 33.378437995910645 Total Reward: -52.03125000000036 Avg_Loss: 0.6123737779860737
Episode: 7: Time: 15.93116545677185 Total Reward: 0.02753623188465326 Avg_Loss: 0.7572477972876709
Episode: 8: Time: 34.41148781776428 Total Reward: -60.90909090909164 Avg_Loss: 4.739733181768606
Episode: 9: Time: 32.70757722854614 Total Reward: -23.104575163399375 Avg_Loss: 4.387480121011994
saving to ./runs/DoubleDQN_HardUpdates/run0
/content/drive/MyDrive/ECE_2392AS_Project4_V2/Student-Version 2/DQN.py:317: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  states = torch.tensor(states, device=self.device, dtype=torch.float32)
/content/drive/MyDrive/ECE_2392AS_Project4_V2/Student-Version 2/DQN.py:318: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  actions = torch.tensor(actions, device=self.device, dtype=torch.int64).unsqueeze(1)
/content/drive/MyDrive/ECE_2392AS_Project4_V2/Student-Version 2/DQN.py:319: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  rewards = torch.tensor(rewards, device=self.device, dtype=torch.float32).unsqueeze(1)
/content/drive/MyDrive/ECE_2392AS_Project4_V2/Student-Version 2/DQN.py:320: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  next_states = torch.tensor(next_states, device=self.device, dtype=torch.float32)
/content/drive/MyDrive/ECE_2392AS_Project4_V2/Student-Version 2/DQN.py:321: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  dones = torch.tensor(dones, device=self.device, dtype=torch.float32).unsqueeze(1)
/usr/local/lib/python3.10/dist-packages/torch/nn/modules/conv.py:456: UserWarning: Plan failed with a cudnnException: CUDNN_BACKEND_EXECUTION_PLAN_DESCRIPTOR: cudnnFinalize Descriptor Failed cudnn_status: CUDNN_STATUS_NOT_SUPPORTED (Triggered internally at ../aten/src/ATen/native/cudnn/Conv_v8.cpp:919.)
